generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  Admin
  Technician
  Client
}

enum Status {
  Open
  InService
  Closed
}

enum ServiceStatus {
  Active
  Inactive
}

model User {
  id       String  @id @default(uuid())
  name     String
  email    String  @unique
  password String
  filename String?

  role UserRole @default(Client)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  technician Technician?
  calls      Call[]

  @@map("users")
}

model Technician {
  id     String @id @default(uuid())
  userId String @unique @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  availableTimes String[]
  calls          Call[]

  @@map("technicians")
}

model Call {
  id          String        @id @default(uuid())
  title       String
  description String
  services    CallService[]
  status      Status        @default(Open)

  userId String @map("user_id")
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  technicianId String     @map("technician_id")
  technician   Technician @relation(fields: [technicianId], references: [id], onDelete: Cascade)

  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  @@map("calls")
}

model Service {
  id     String @id @default(uuid())
  name   String
  amount Float

  status ServiceStatus @default(Active)

  calls CallService[]

  @@map("services")
}

model CallService {
  id        String  @id @default(uuid())
  callId    String  @map("call_id")
  call      Call    @relation(fields: [callId], references: [id], onDelete: Cascade)
  serviceId String  @map("service_id")
  service   Service @relation(fields: [serviceId], references: [id], onDelete: Cascade)

  @@unique([callId, serviceId]) // Um serviço não pode ser repetido no mesmo chamado
  @@map("call_services")
}
